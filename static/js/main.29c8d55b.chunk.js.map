{"version":3,"sources":["PopupWindows/svg/CancelIcon.jsx","PopupWindows/svg/ClearAllInfo.jsx","PopupWindows/PopupWindowForAdvancedMenu.tsx","Constants/constants.js","PopupWindows/PopupWindowForVoicesMenu.tsx","AppCode/svg/ArrowIcon.jsx","AppCode/svg/AdvancedIcon.jsx","lib/lib.ts","lib/getVoicesArray.tsx","AppCode/AppCode.tsx","Dictionaries.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["CancelIcon","height","viewBox","width","xmlns","this","props","fill","points","PureComponent","ClearAllInfo","fillRule","id","transform","d","noop","PopupWindowForAdvancedMenu","menuRow","Icon","label","menuProps","handleClickedFunc","className","onClick","e","handleClicked","onDoubleClick","func","stopPropagation","setState","increaseOpacity","setTimeout","ANIMATION_INTERVAL","state","requestAnimationFrame","styles","getComputedStyle","document","documentElement","greenColor","String","getPropertyValue","trim","redColor","whiteColor","blackColor","handleHideItemClicked","handleUnhideAllItemsClicked","handleDictClicked","handleClosePopupClicked","handleShowSetVoicePopupClicked","style","opacity","transition","color","PopupWindowForVoicesMenu","voice","index","lang","name","key","selectedVoiceIndex","handleVoiceDidSelect","voicesArray","map","ArrowIcon","AdvancedIcon","reshuffle","dic","item","Math","random","sort","a","b","elem","filterDeletedOff","arr","filter","russian","Object","keys","localStorage","getItem","getDictionaryWithMix","dictionaries","oldD","dictionary2","oldDictionary2","concat","dictionary20","dictionary1","oldDictionary1","dictionary10","rus","eng","slice","getVoicesArray","Promise","resolve","window","speechSynthesis","getVoices","startsWith","initialState","activeIndex","showEnglish","showAdvanced","appcodeIsSpeaking","showVoicesMenu","voiceIndex","advancedColor","randomDictionary","nullObj","AppCode","engVoice","appcodeIsSpeakingTimeOut","incrementLocalStorage","activeObj","undefined","shown","parseInt","newItem","setItem","handleForwardClicked","event","newActiveIndex","handleBackClicked","handleShowEnglishClicked","handleAdvancedClicked","length","newRandomDictionary","handleStatisticClicked","clear","handleTextToSpeachClicked","text","utterThis","SpeechSynthesisUtterance","synth","volume","rate","onend","clearTimeout","textWithNoComments","split","reduce","accumulator","currentValue","speak","handleDictClickedLocal","number","initializeState","element","forceUpdate","then","result","backgroundColor","english","count","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.29c8d55b.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\n\nexport default class CancelIcon extends PureComponent {\n    render() {\n        return (\n            <svg\n                height=\"32\"\n                viewBox=\"0 0 32 32\"\n                width=\"32\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                {...this.props}\n            >\n                <rect fill=\"none\" height=\"32\" width=\"32\" />\n                <polygon\n                    fill={this.props.fill}\n                    points=\"2,26 6,30 16,20 26,30 30,26 20,16 30,6 26,2 16,12 6,2 2,6 12,16\"\n                />\n            </svg>\n        );\n    }\n}\n","import React, { PureComponent } from 'react';\n\nexport default class ClearAllInfo extends PureComponent {\n    render() {\n        return (\n            <svg\n                height=\"16\"\n                viewBox=\"0 0 16 16\"\n                width=\"16\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                {...this.props}\n            >\n                <g fill=\"none\" fillRule=\"evenodd\" id=\"Icons with numbers\">\n                    <g fill={this.props.fill} id=\"Group\" transform=\"translate(-432 -432)\">\n                        <path\n                            d=\"M438.972188,442 L438.972188,433 L447.922128,433 L444.938815,436 C446.430471,437 448.419347,439.5 447.922128,442 C447.424909,445 445.436034,447 440.961064,447 C435.491657,447 434,442.5 434,442 C436.983313,444.5 438.972188,445 440.961064,445 C442.949939,445 443.944377,443.5 443.944377,442 C443.944377,441 443.447158,440 441.955502,439 L438.972188,442 L438.972188,442 Z M438.972188,442\"\n                            id=\"Shape copy\"\n                            transform=\"matrix(-1 0 0 1 882 0)\"\n                        />\n                    </g>\n                </g>\n            </svg>\n        );\n    }\n}\n","import React, { PureComponent, SyntheticEvent } from \"react\";\n\nimport CancelIcon from \"./svg/CancelIcon\";\nimport ClearAllInfo from \"./svg/ClearAllInfo\";\n\nimport {\n  ANIMATION_INTERVAL,\n  ICON_SIZE\n} from \"../Constants/constants\";\n\nconst TRANSITION = \"opacity \" + ANIMATION_INTERVAL + \"s ease\";\n\nconst noop = () => {};\n\nexport interface Props {\n  handleHideItemClicked(): void;\n  handleUnhideAllItemsClicked(): void;\n  handleDictClicked(number: number): void;\n  handleClosePopupClicked(): void;\n  handleShowSetVoicePopupClicked(): void;\n\n  // selectedVoiceIndex: string | null;\n  // voicesArray: Voice[];\n  // handleClosePopupClicked(): void;\n  // handleVoiceDidSelect(index: string): void;\n}\n\ninterface State {\n  increaseOpacity: boolean;\n}\n\nclass PopupWindowForAdvancedMenu extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { increaseOpacity: false };\n  }\n\n  componentDidMount() {\n    requestAnimationFrame(() => {\n      this.setState({ increaseOpacity: true });\n    });\n  }\n\n  menuRow = ({\n    Icon,\n    label,\n    menuProps,\n    handleClickedFunc\n  }: {\n    Icon: any;\n    label: string;\n    menuProps:\n      | {\n          height: string;\n          width: string;\n          fill: string;\n        }\n      | {};\n    handleClickedFunc(): void;\n  }) => (\n    <div\n      className=\"popup__row\"\n      onClick={(e: SyntheticEvent) =>\n        this.handleClicked(e, handleClickedFunc)\n      }\n      onDoubleClick={(e: SyntheticEvent) =>\n        this.handleClicked(e, handleClickedFunc)\n      }\n    >\n      <Icon {...menuProps} />\n      <div className=\"popup__gap\" />\n      <div>{label}</div>\n    </div>\n  );\n\n  handleClicked = (e: SyntheticEvent, func: () => void) => {\n    e.stopPropagation();\n    this.setState({ increaseOpacity: false });\n    setTimeout(() => {\n      func();\n    }, ANIMATION_INTERVAL * 1000);\n    return false;\n  };\n\n  render() {\n    const styles = getComputedStyle(document.documentElement);\n    const greenColor = String(\n      styles.getPropertyValue(\"--english-text-color\")\n    ).trim();\n    const redColor = String(\n      styles.getPropertyValue(\"--danger-color\")\n    ).trim();\n    const whiteColor = String(\n      styles.getPropertyValue(\"--base-text-color\")\n    ).trim();\n    const blackColor = String(\n      styles.getPropertyValue(\"--background-color\")\n    ).trim();\n\n    const {\n      handleHideItemClicked,\n      handleUnhideAllItemsClicked,\n      handleDictClicked,\n      handleClosePopupClicked,\n      handleShowSetVoicePopupClicked\n    } = this.props;\n\n    // console.log('this.state.increaseOpacity = ', this.state.increaseOpacity);\n\n    return (\n      <div\n        style={{\n          opacity: this.state.increaseOpacity === true ? 1 : 0,\n          transition: TRANSITION\n        }}\n        onClick={(e: SyntheticEvent) =>\n          this.handleClicked(e, handleClosePopupClicked)\n        }\n        onDoubleClick={(e: SyntheticEvent) =>\n          this.handleClicked(e, handleClosePopupClicked)\n        }\n      >\n        <div className=\"popup__full_screen_div_opacity\" />\n        <div className=\"popup__full_screen_div\">\n          <div className=\"popup__window\">\n            <div className=\"popup__cancel\">\n              <CancelIcon\n                fill={whiteColor}\n                height={16}\n                onClick={(e: SyntheticEvent) =>\n                  this.handleClicked(e, handleClosePopupClicked)\n                }\n                onDoubleClick={(e: SyntheticEvent) =>\n                  this.handleClicked(e, handleClosePopupClicked)\n                }\n                width={16}\n              />\n            </div>\n            <div className=\"popup__list\">\n              {this.menuRow({\n                label: \"Advanced:\",\n                Icon: CancelIcon,\n                menuProps: {\n                  height: ICON_SIZE,\n                  width: ICON_SIZE,\n                  fill: blackColor\n                },\n                handleClickedFunc: noop\n              })}\n\n              {this.menuRow({\n                label: \"hide this item\",\n                Icon: CancelIcon,\n                menuProps: {\n                  height: ICON_SIZE,\n                  width: ICON_SIZE,\n                  fill: redColor\n                },\n                handleClickedFunc: handleHideItemClicked\n              })}\n\n              {this.menuRow({\n                label: \"reset all info\",\n                Icon: ClearAllInfo,\n                menuProps: {\n                  height: ICON_SIZE,\n                  width: ICON_SIZE,\n                  fill: greenColor\n                },\n                handleClickedFunc: handleUnhideAllItemsClicked\n              })}\n\n              {this.menuRow({\n                label: \"dict #1\",\n                Icon: () => (\n                  <div\n                    style={{ width: ICON_SIZE, color: greenColor }}\n                  >\n                    D1\n                  </div>\n                ),\n                menuProps: {},\n                handleClickedFunc: () => handleDictClicked(1)\n              })}\n\n              {this.menuRow({\n                label: \"dict #2\",\n                Icon: () => (\n                  <div\n                    style={{ width: ICON_SIZE, color: greenColor }}\n                  >\n                    D2\n                  </div>\n                ),\n                menuProps: {},\n                handleClickedFunc: () => handleDictClicked(2)\n              })}\n              {this.menuRow({\n                label: \"set voice\",\n                Icon: () => (\n                  <div\n                    style={{ width: ICON_SIZE, color: greenColor }}\n                  >\n                    D2\n                  </div>\n                ),\n                menuProps: {},\n                handleClickedFunc: () =>\n                  handleShowSetVoicePopupClicked()\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PopupWindowForAdvancedMenu;\n","export const ANIMATION_INTERVAL = 0.5; // sec\nexport const ICON_SIZE = '32';\n\nexport const NUMBER_OF_PAIRS_FROM_OLD_DICTIONARY = 6;\n","import React, { PureComponent, SyntheticEvent } from 'react';\n\nimport CancelIcon from './svg/CancelIcon';\n\nimport { ANIMATION_INTERVAL } from '../Constants/constants';\n\nconst TRANSITION = 'opacity ' + ANIMATION_INTERVAL + 's ease';\n\ntype Voice = { name: string; lang: string };\n\nexport interface Props {\n\tselectedVoiceIndex: string | null;\n\tvoicesArray: Voice[];\n\thandleClosePopupClicked(): void;\n\thandleVoiceDidSelect(index: string): void;\n}\n\ninterface State {\n\tincreaseOpacity: boolean;\n}\n\nclass PopupWindowForVoicesMenu extends PureComponent<Props, State> {\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.state = { increaseOpacity: false };\n\t}\n\n\tcomponentDidMount() {\n\t\trequestAnimationFrame(() => {\n\t\t\tthis.setState({ increaseOpacity: true });\n\t\t});\n\t}\n\n\tmenuRow = (voice: Voice, index: string) =>\n\t\tvoice.lang || voice.name ? (\n\t\t\t<div\n\t\t\t\tkey={voice.name}\n\t\t\t\tclassName={\n\t\t\t\t\t'popup__row' +\n\t\t\t\t\t(this.props.selectedVoiceIndex === index\n\t\t\t\t\t\t? ' popup__row_selected'\n\t\t\t\t\t\t: '')\n\t\t\t\t}\n\t\t\t\tonClick={() => this.props.handleVoiceDidSelect(index)}\n\t\t\t\tonDoubleClick={() => this.props.handleVoiceDidSelect(index)}\n\t\t\t>\n\t\t\t\t{/* <menuItem.Icon {...menuItem.props} /> */}\n\t\t\t\t<div className=\"popup__gap\" />\n\t\t\t\t<div>{voice.lang + ' - ' + voice.name}</div>\n\t\t\t</div>\n\t\t) : null;\n\n\thandleClicked = (e: SyntheticEvent, func: () => void) => {\n\t\te.stopPropagation();\n\t\tthis.setState({ increaseOpacity: false });\n\t\tsetTimeout(() => {\n\t\t\tfunc();\n\t\t}, ANIMATION_INTERVAL * 1000);\n\t\treturn false;\n\t};\n\n\trender() {\n\t\tconst styles = getComputedStyle(document.documentElement);\n\t\t//\tconst greenColor = String(styles.getPropertyValue('--english-text-color')).trim();\n\t\t//\tconst redColor = String(styles.getPropertyValue('--danger-color')).trim();\n\t\tconst whiteColor = String(\n\t\t\tstyles.getPropertyValue('--base-text-color'),\n\t\t).trim();\n\t\t//  const blackColor = String(styles.getPropertyValue('--background-color')).trim();\n\n\t\tconst { voicesArray, handleClosePopupClicked } = this.props;\n\n\t\t// console.log('PopupWindowForVoicesMenu = ', this.props);\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\topacity: this.state.increaseOpacity === true ? 1 : 0,\n\t\t\t\t\ttransition: TRANSITION,\n\t\t\t\t}}\n\t\t\t\tonClick={(e) =>\n\t\t\t\t\tthis.handleClicked(e, handleClosePopupClicked)}\n\t\t\t\tonDoubleClick={(e) =>\n\t\t\t\t\tthis.handleClicked(e, handleClosePopupClicked)}\n\t\t\t>\n\t\t\t\t<div className=\"popup__full_screen_div_opacity\" />\n\t\t\t\t<div className=\"popup__full_screen_div\">\n\t\t\t\t\t<div className=\"popup__window popup__scroll\">\n\t\t\t\t\t\t<div className=\"popup__cancel\">\n\t\t\t\t\t\t\t<CancelIcon\n\t\t\t\t\t\t\t\tfill={whiteColor}\n\t\t\t\t\t\t\t\theight={16}\n\t\t\t\t\t\t\t\tonClick={(e: SyntheticEvent) =>\n\t\t\t\t\t\t\t\t\tthis.handleClicked(e, handleClosePopupClicked)}\n\t\t\t\t\t\t\t\tonDoubleClick={(e: SyntheticEvent) =>\n\t\t\t\t\t\t\t\t\tthis.handleClicked(e, handleClosePopupClicked)}\n\t\t\t\t\t\t\t\twidth={16}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"popup__list\">\n\t\t\t\t\t\t\t{voicesArray.map((voice: Voice, index: number) =>\n\t\t\t\t\t\t\t\tthis.menuRow(voice, String(index)),\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default PopupWindowForVoicesMenu;\n","import React, { PureComponent } from 'react';\n\nexport default class ArrowIcon extends PureComponent {\n    render() {\n        return (\n            <svg\n                height=\"32\"\n                viewBox=\"0 0 141.732 141.732\"\n                width=\"32\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"#00000\"\n                {...this.props}\n            >\n                <path d=\"M105.614,118.681c3.398,3.396,3.4,8.912,0,12.311c-3.396,3.399-8.91,3.398-12.311,0c-0.02-0.02-0.035-0.04-0.053-0.061 l-0.025,0.022l-57.66-57.66l0.024-0.022c-1.61-1.579-2.608-3.775-2.608-6.208c-0.002-2.73,1.258-5.166,3.229-6.762l-0.06-0.058 l57.66-57.66l0.025,0.024c0.018-0.021,0.033-0.039,0.053-0.058c3.4-3.4,8.912-3.4,12.312,0c3.398,3.396,3.398,8.908,0,12.311 c-0.021,0.02-0.041,0.034-0.061,0.054l0.023,0.024L54.043,67.063l51.54,51.54l-0.025,0.021 C105.573,118.646,105.594,118.66,105.614,118.681\" />\n            </svg>\n        );\n    }\n}\n","import React, { PureComponent } from 'react';\n\nexport default class AdvancedIcon extends PureComponent {\n\trender() {\n\t\treturn (\n\t\t\t<svg\n\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t{...this.props}\n\t\t\t\tclassName=\"cypressAdvancedIcon\"\n\t\t\t>\n\t\t\t\t<g id=\"icons\">\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M22.2,14.4L21,13.7c-1.3-0.8-1.3-2.7,0-3.5l1.2-0.7c1-0.6,1.3-1.8,0.7-2.7l-1-1.7c-0.6-1-1.8-1.3-2.7-0.7 L18,5.1c-1.3,0.8-3-0.2-3-1.7V2c0-1.1-0.9-2-2-2h-2C9.9,0,9,0.9,9,2v1.3c0,1.5-1.7,2.5-3,1.7L4.8,4.4c-1-0.6-2.2-0.2-2.7,0.7 l-1,1.7C0.6,7.8,0.9,9,1.8,9.6L3,10.3C4.3,11,4.3,13,3,13.7l-1.2,0.7c-1,0.6-1.3,1.8-0.7,2.7l1,1.7c0.6,1,1.8,1.3,2.7,0.7L6,18.9 c1.3-0.8,3,0.2,3,1.7V22c0,1.1,0.9,2,2,2h2c1.1,0,2-0.9,2-2v-1.3c0-1.5,1.7-2.5,3-1.7l1.2,0.7c1,0.6,2.2,0.2,2.7-0.7l1-1.7 C23.4,16.2,23.1,15,22.2,14.4z M12,16c-2.2,0-4-1.8-4-4c0-2.2,1.8-4,4-4s4,1.8,4,4C16,14.2,14.2,16,12,16z\"\n\t\t\t\t\t\tid=\"settings\"\n\t\t\t\t\t/>\n\t\t\t\t</g>\n\t\t\t</svg>\n\t\t);\n\t}\n}\n","import { dictType, dictionariesType } from \"../Types\";\nimport { NUMBER_OF_PAIRS_FROM_OLD_DICTIONARY } from \"../Constants/constants\";\n\nexport const getRandomInt = (min: number, max: number) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  //  The  min is inclusive  and the max is exclusive\n  return Math.floor(Math.random() * (max - min)) + min;\n};\n\nconst reshuffle = (dic: any[]) =>\n  dic\n    .map(item => [Math.random(), item])\n    .sort((a, b) => a[0] - b[0])\n    .map(elem => elem[1]);\n\nexport const filterDeletedOff = (arr: dictType[]) => {\n  const result = (arr || []).filter(elem => {\n    const russian = Object.keys(elem || {})[0];\n    if (russian) {\n      const item = localStorage.getItem(russian);\n      return item !== \"d\";\n    } else {\n      return false;\n    }\n  });\n  return result;\n};\n\nconst DICT = \"DICT\";\nconst DICT_NUMBER = \"2\";\n\nexport const getDictionaryWithMix = (\n  dictionaries: dictionariesType\n) => {\n  const whichDict = localStorage.getItem(DICT);\n  let d: dictType[];\n  let oldD: dictType[];\n  if (whichDict === DICT_NUMBER) {\n    d = dictionaries.dictionary2;\n    oldD = dictionaries.oldDictionary2.concat(\n      dictionaries.dictionary20\n    );\n  } else {\n    d = dictionaries.dictionary1;\n    oldD = dictionaries.oldDictionary1.concat(\n      dictionaries.dictionary10\n    );\n  }\n  d = d.filter(({ rus, eng }) => !(rus === \"\" && eng === \"\"));\n  d = reshuffle(filterDeletedOff(d));\n  oldD = reshuffle(filterDeletedOff(oldD)).slice(\n    0,\n    NUMBER_OF_PAIRS_FROM_OLD_DICTIONARY\n  );\n\n  return oldD.concat(d);\n};\n\nexport const handleDictClicked = (number: number) => {\n  if (number === 2) {\n    localStorage.setItem(DICT, DICT_NUMBER);\n  } else {\n    localStorage.setItem(DICT, \"1\");\n  }\n};\n","const getVoicesArray = () =>\n\tnew Promise((resolve) => {\n\t\twindow.speechSynthesis.getVoices();\n\t\tsetTimeout(() => {\n\t\t\tconst voicesArray = window.speechSynthesis\n\t\t\t\t.getVoices()\n\t\t\t\t.filter((voice) => voice.lang.startsWith('en-'))\n\t\t\t\t.sort((a, b) => (a.lang > b.lang ? 1 : -1));\n\t\t\tresolve(voicesArray);\n\t\t}, 100);\n\t});\n\nexport default getVoicesArray;\n","import React, { PureComponent, MouseEvent } from \"react\";\n\nimport PopupWindowForAdvancedMenu from \"../PopupWindows/PopupWindowForAdvancedMenu\";\nimport PopupWindowForVoicesMenu from \"../PopupWindows/PopupWindowForVoicesMenu\";\nimport ArrowIcon from \"./svg/ArrowIcon\";\nimport AdvancedIcon from \"./svg/AdvancedIcon\";\n\nimport { getDictionaryWithMix, handleDictClicked } from \"../lib/lib\";\nimport getVoicesArray from \"../lib/getVoicesArray\";\nimport { ICON_SIZE } from \"../Constants/constants\";\n\nimport { dictType, dictionariesType } from \"../Types\";\n\nconst VOICE_INDEX_IN_VOICES_ARRAY = \"voiceIndexInVoicesArray\";\n\n// console.log('process.env = ', process.env);\n// console.log(\n// \t'process.env.REACT_APP_SECRET_CODE = ',\n// \tprocess.env && process.env.REACT_APP_SECRET_CODE,\n// );\n\nexport interface Props {\n  dictionaries: dictionariesType;\n}\n\ninterface State {\n  activeIndex: number;\n  showEnglish: boolean;\n  showAdvanced: boolean;\n  appcodeIsSpeaking: boolean;\n  showVoicesMenu: boolean;\n  voiceIndex: string | null;\n  randomDictionary: dictType[];\n  greenColor: string;\n  advancedColor: string;\n  whiteColor: string;\n}\n\nconst initialState: State = {\n  activeIndex: 0,\n  showEnglish: false,\n  showAdvanced: false,\n  appcodeIsSpeaking: false,\n  showVoicesMenu: false,\n  voiceIndex: null,\n  greenColor: \"\",\n  advancedColor: \"\",\n  whiteColor: \"\",\n  randomDictionary: []\n};\n\nconst nullObj: dictType = { rus: \"\", eng: \"\" };\n\nclass AppCode extends PureComponent<Props, State> {\n  voicesArray: any;\n  engVoice: any;\n  appcodeIsSpeakingTimeOut: any;\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      ...initialState,\n      randomDictionary: getDictionaryWithMix(this.props.dictionaries)\n    };\n  }\n\n  componentDidMount() {\n    this.initializeState();\n  }\n\n  incrementLocalStorage = () => {\n    const { activeIndex, randomDictionary, showEnglish } = this.state;\n    if (showEnglish) {\n      const activeObj =\n        activeIndex !== undefined && randomDictionary[activeIndex];\n      const russian = activeObj && activeObj.rus;\n      if (russian) {\n        const item: string | null =\n          localStorage.getItem(russian) || \"\";\n        const shown = parseInt(item, 10) || 0;\n        const newItem = String(shown + 1);\n        localStorage.setItem(russian, newItem);\n      }\n    }\n  };\n\n  handleForwardClicked = (event: MouseEvent) => {\n    event.stopPropagation();\n    this.incrementLocalStorage();\n\n    const { activeIndex } = this.state;\n\n    const newActiveIndex = activeIndex + 1;\n    // console.log('handleForwardClicked newActiveIndex = ', newActiveIndex);\n    this.setState({\n      activeIndex: newActiveIndex,\n      showEnglish: false,\n      appcodeIsSpeaking: false\n    });\n  };\n\n  handleBackClicked = (event: MouseEvent) => {\n    event.stopPropagation();\n    this.incrementLocalStorage();\n\n    const { activeIndex } = this.state;\n    const newActiveIndex = activeIndex === 0 ? 0 : activeIndex - 1;\n    // console.log('handleBackClicked newActiveIndex = ', newActiveIndex);\n    this.setState({\n      activeIndex: newActiveIndex,\n      showEnglish: false,\n      appcodeIsSpeaking: false\n    });\n  };\n\n  handleShowEnglishClicked = (event: MouseEvent) => {\n    event.stopPropagation();\n    this.setState({\n      showEnglish: this.state.showEnglish !== true,\n      appcodeIsSpeaking: false\n    });\n  };\n\n  handleAdvancedClicked = (event: MouseEvent) => {\n    event.stopPropagation();\n    this.setState({\n      showAdvanced: true,\n      appcodeIsSpeaking: false\n    });\n  };\n  handleClosePopupClicked = () => {\n    this.setState({\n      showAdvanced: false,\n      appcodeIsSpeaking: false,\n      showVoicesMenu: false\n    });\n  };\n\n  handleHideItemClicked = () => {\n    const { activeIndex, randomDictionary } = this.state;\n    if (\n      activeIndex !== undefined &&\n      activeIndex < randomDictionary.length\n    ) {\n      const activeObj = randomDictionary[activeIndex];\n      const russian = activeObj.rus;\n      if (russian) {\n        localStorage.setItem(russian, \"d\");\n      }\n      const newRandomDictionary = randomDictionary\n        .slice(0, activeIndex)\n        .concat(randomDictionary.slice(activeIndex + 1));\n      this.setState({\n        randomDictionary: newRandomDictionary,\n        showEnglish: false,\n        showAdvanced: false,\n        appcodeIsSpeaking: false\n      });\n    }\n  };\n\n  handleStatisticClicked = (event: MouseEvent) => {\n    event.stopPropagation();\n    if (this.state.showEnglish) {\n      this.handleForwardClicked(event);\n    } else {\n      this.handleShowEnglishClicked(event);\n    }\n  };\n\n  handleUnhideAllItemsClicked = () => {\n    localStorage.clear();\n    this.setState({\n      activeIndex: 0,\n      randomDictionary: getDictionaryWithMix(this.props.dictionaries),\n      showEnglish: false,\n      showAdvanced: false,\n      appcodeIsSpeaking: false,\n      voiceIndex: null\n    });\n  };\n\n  handleTextToSpeachClicked = (event: MouseEvent, text: string) => {\n    event.stopPropagation();\n    if (this.state.appcodeIsSpeaking) {\n      return false;\n    }\n    const utterThis = new SpeechSynthesisUtterance();\n\n    const synth = window.speechSynthesis;\n    if (utterThis && synth) {\n      if (this.engVoice) {\n        utterThis.voice = this.engVoice;\n      }\n      // console.log('voices = ', this.voicesArray);\n\n      if (\n        this.state.voiceIndex &&\n        this.voicesArray &&\n        this.voicesArray[parseInt(this.state.voiceIndex || \"0\", 10)]\n      ) {\n        utterThis.voice = this.voicesArray[\n          parseInt(this.state.voiceIndex || \"0\", 10)\n        ];\n      }\n\n      // utterThis.voiceURI = 'Google UK English Female';\n      utterThis.volume = 1.0; // 0 to 1\n      utterThis.rate = 1.0; // 0.1 to 10\n      // utterThis.pitch = 2; //0 to 2\n      utterThis.lang = \"en-GB\";\n      this.setState({ appcodeIsSpeaking: true });\n      utterThis.onend = event => {\n        this.setState({ appcodeIsSpeaking: false });\n        if (this.appcodeIsSpeakingTimeOut) {\n          clearTimeout(this.appcodeIsSpeakingTimeOut);\n          this.appcodeIsSpeakingTimeOut = null;\n        }\n      };\n      this.appcodeIsSpeakingTimeOut = setTimeout(\n        () => {\n          this.setState({ appcodeIsSpeaking: false });\n          this.appcodeIsSpeakingTimeOut = null;\n        },\n        6000 // in case of utterThis.onend failed\n      );\n\n      const textWithNoComments = text\n        .split(\"//\")\n        .reduce(\n          (\n            accumulator: string,\n            currentValue: string,\n            index: number\n          ) => (index % 2 ? accumulator : accumulator + currentValue),\n          \"\"\n        );\n      utterThis.text = textWithNoComments;\n      synth.speak(utterThis);\n    }\n  };\n\n  handleDictClickedLocal = (number: number) => {\n    handleDictClicked(number);\n    this.setState({\n      activeIndex: 0,\n      randomDictionary: getDictionaryWithMix(this.props.dictionaries),\n      showEnglish: false,\n      showAdvanced: false,\n      appcodeIsSpeaking: false\n    });\n  };\n\n  handleShowSetVoicePopupClicked = () => {\n    this.setState({\n      showAdvanced: false,\n      showVoicesMenu: true\n    });\n  };\n\n  handleVoiceDidSelect = (voiceIndex: string) => {\n    this.setState({\n      showAdvanced: false,\n      showVoicesMenu: false,\n      voiceIndex\n    });\n    localStorage.setItem(VOICE_INDEX_IN_VOICES_ARRAY, voiceIndex);\n  };\n\n  initializeState = () => {\n    const element = document.documentElement;\n    // console.log('window.screen = ', window.screen);\n    // const height = Math.max(\n    // \tparseInt(window.screen.height, 10),\n    // \tparseInt(window.screen.width, 10),\n    // );\n    // const width = Math.min(\n    // \tparseInt(window.screen.height, 10),\n    // \tparseInt(window.screen.width, 10),\n    // );\n    // console.log('height , width = ',height , width);\n\n    // element.style.setProperty('--screen-height', height + 'px');\n    // element.style.setProperty('--screen-width', width + 'px');\n    const voiceIndex = localStorage.getItem(\n      VOICE_INDEX_IN_VOICES_ARRAY\n    );\n\n    const styles = getComputedStyle(element);\n    this.setState({\n      ...initialState,\n      randomDictionary: getDictionaryWithMix(this.props.dictionaries),\n      greenColor: String(\n        styles.getPropertyValue(\"--english-text-color\")\n      ).trim(),\n      advancedColor: String(\n        styles.getPropertyValue(\"--settings-color\")\n      ).trim(),\n      whiteColor: String(\n        styles.getPropertyValue(\"--base-text-color\")\n      ).trim(),\n      voiceIndex\n    });\n    // get voices array\n    window.speechSynthesis.getVoices();\n    this.forceUpdate();\n\n    getVoicesArray().then(result => {\n      this.voicesArray = result;\n    });\n  };\n\n  render() {\n    const {\n      activeIndex,\n      randomDictionary,\n      showAdvanced,\n      showVoicesMenu,\n      showEnglish,\n      appcodeIsSpeaking,\n      greenColor,\n      advancedColor,\n      whiteColor\n    } = this.state;\n\n    if (activeIndex >= randomDictionary.length) {\n      return (\n        <div\n          className=\"popup__full_screen_div\"\n          style={{ backgroundColor: whiteColor }}\n          onClick={this.initializeState}\n          onDoubleClick={this.initializeState}\n        >\n          <div className=\"popup__window popup__scroll appcode__eng_text_color\">\n            {\"That's all!. Click to restart.\"}\n          </div>\n        </div>\n      );\n    }\n\n    const activeObj =\n      (activeIndex !== undefined && randomDictionary[activeIndex]) ||\n      nullObj;\n    const russian = activeObj.rus;\n\n    const english = activeObj.eng;\n    const count = randomDictionary.length;\n\n    const item = localStorage.getItem(russian);\n    const shown = parseInt(item || \"0\", 10) || 0;\n\n    // console.log('App code render this.props = ', this.props);\n    // console.log('App code render activeObj = ', activeObj);\n    // console.log('App code count = ', count);\n    // console.log('App code english = ', english);\n\n    return (\n      <div className=\"appcode__grid\">\n        <div className=\"appcode__info\">\n          <div className=\"appcode__info2\">\n            <ArrowIcon\n              height={ICON_SIZE}\n              onClick={this.handleBackClicked}\n              onDoubleClick={this.handleBackClicked}\n              width={ICON_SIZE}\n              fill={whiteColor}\n            />\n            <AdvancedIcon\n              height={ICON_SIZE}\n              onClick={this.handleAdvancedClicked}\n              onDoubleClick={this.handleAdvancedClicked}\n              width={ICON_SIZE}\n              fill={advancedColor}\n            />\n\n            {showEnglish ? (\n              <ArrowIcon\n                className=\"appcode__icon_rotate_back\"\n                height={ICON_SIZE}\n                onClick={this.handleForwardClicked}\n                onDoubleClick={this.handleForwardClicked}\n                width={ICON_SIZE}\n                fill={greenColor}\n              />\n            ) : (\n              <ArrowIcon\n                className=\"appcode__icon_rotate\"\n                height={ICON_SIZE}\n                onClick={this.handleShowEnglishClicked}\n                onDoubleClick={this.handleShowEnglishClicked}\n                width={ICON_SIZE}\n                fill={greenColor}\n              />\n            )}\n\n            <div\n              onClick={this.handleStatisticClicked}\n              onDoubleClick={this.handleStatisticClicked}\n            >\n              <span>{activeIndex + 1 + \"/\" + count}</span>\n              <span className=\"appcode__eng_text_color\">\n                {\"(\" + shown + \")\"}\n              </span>\n            </div>\n\n            <ArrowIcon\n              className=\"appcode__icon_invert__horizontal\"\n              height={ICON_SIZE}\n              onClick={this.handleForwardClicked}\n              onDoubleClick={this.handleForwardClicked}\n              width={ICON_SIZE}\n              fill={whiteColor}\n            />\n          </div>\n        </div>\n        {/* Russian field */}\n        <div\n          className=\"appcode__russian\"\n          onClick={this.handleShowEnglishClicked}\n          onDoubleClick={this.handleShowEnglishClicked}\n        >\n          <div className=\"appcode__center\" key={russian}>\n            <div className=\"appcode__scroll\">{russian}</div>\n          </div>\n        </div>\n        {/* English field */}\n        <div\n          className=\"appcode__english\"\n          onClick={e => this.handleTextToSpeachClicked(e, english)}\n          onDoubleClick={e =>\n            this.handleTextToSpeachClicked(e, english)\n          }\n        >\n          {showEnglish ? (\n            <div className=\"appcode__center\">\n              <div className=\"appcode__scroll\">\n                <div\n                  className={\n                    \"appcode__eng_text_color\" +\n                    (appcodeIsSpeaking ? \" appcode__speaking\" : \"\")\n                  }\n                >\n                  {english}\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"appcode__center\" />\n          )}\n        </div>\n\n        {showAdvanced ? (\n          <PopupWindowForAdvancedMenu\n            handleClosePopupClicked={this.handleClosePopupClicked}\n            handleHideItemClicked={this.handleHideItemClicked}\n            handleUnhideAllItemsClicked={\n              this.handleUnhideAllItemsClicked\n            }\n            handleDictClicked={this.handleDictClickedLocal}\n            handleShowSetVoicePopupClicked={\n              this.handleShowSetVoicePopupClicked\n            }\n          />\n        ) : (\n          <div />\n        )}\n\n        {showVoicesMenu ? (\n          <PopupWindowForVoicesMenu\n            voicesArray={this.voicesArray}\n            handleClosePopupClicked={this.handleClosePopupClicked}\n            handleVoiceDidSelect={this.handleVoiceDidSelect}\n            selectedVoiceIndex={this.state.voiceIndex}\n          />\n        ) : (\n          <div />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default AppCode;\n","import { dictType } from \"./Types\";\n\nconst dictionary10: dictType[] = [];\n\nconst dictionary1: dictType[] = [\n  {\n    eng:\n      \"The first thing you’ll want to do is to draw boxes around every component (and subcomponent) in the mock and give them all names. Separate your UI into components, where each component matches one piece of your data model.\",\n    rus: \"The first thing - Break The UI Into A Component Hierarchy:\"\n  },\n\n  {\n    eng:\n      \"A component should ideally only do one thing. If it ends up growing, it should be decomposed into smaller subcomponents.\",\n    rus: \"Single responsibility principle:\"\n  },\n  {\n    eng:\n      \"If you’re familiar with the concept of state, don’t use state at all to build the static version. State is reserved only for interactivity, that is, data that changes over time. Since this is a static version of the app, you don’t need it.\",\n    rus: \"State and static version:\"\n  },\n  {\n    eng:\n      \"React doesn't have a mechanism to allow the HTML to change the component. The HTML can only raise events that the component responds to. The typical example is by using onChange.\",\n    rus:\n      \"React’s one-way data flow (also called one-way binding) keeps everything modular and fast:\"\n  },\n  {\n    eng:\n      \"Components let you split the UI into independent, reusable pieces, and think about each piece in isolation.\",\n    rus: \"Components isolation.\"\n  },\n  {\n    eng:\n      \"Conceptually, components are like JavaScript functions. They accept arbitrary inputs (called “props”) and return React elements describing what should appear on the screen.\",\n    rus: \"Conceptually, components ...\"\n  },\n  {\n    eng:\n      \"Don’t be afraid to split components into smaller components.\",\n    rus: \"Don’t be afraid to split ...\"\n  },\n  {\n    eng:\n      \"But in most cases, it’s convenient to have a JavaScript function that handles the submission of the form and has access to the data that the user entered into the form. The standard way to achieve this is with a technique called 'controlled components'\",\n    rus:\n      \"A JavaScript function that handles the submission of the form ...\"\n  },\n  {\n    eng:\n      \"Concretely, a higher-order component is a function that takes a component and returns a new component. A HOC is a pure function with zero side-effects.\",\n    rus: \"Concretely, a higher-order component is ...\"\n  },\n  {\n    eng:\n      \"Apply HOCs outside the component definition so that the resulting component is created only once. Then, its identity will be consistent across renders. This is usually what you want, anyway.\",\n    rus: \"Apply HOCs outside the component definition so ...\"\n  },\n  {\n    eng: \"\",\n    rus: \"\"\n  },\n  {\n    eng: \"\",\n    rus: \"\"\n  },\n  {\n    eng: \"\",\n    rus: \"\"\n  }\n];\n\nconst oldDictionary1: dictType[] = [];\nconst oldDictionary2: dictType[] = [];\n\n// const veryOldDictionary1: dictType[] = [];\n\nconst dictionary20: dictType[] = [];\n\nconst dictionary2: dictType[] = [];\n\nexport default {\n  dictionary1,\n  oldDictionary1,\n  dictionary10,\n  dictionary2,\n  dictionary20,\n  oldDictionary2\n};\n","import React, { PureComponent } from 'react';\n\nimport AppCode from './AppCode/AppCode';\nimport dictionaries from './Dictionaries';\n\nclass App extends PureComponent {\n\trender() {\n\t\treturn <AppCode dictionaries={dictionaries} />;\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}